#!/bin/bash
#
# Copyright (c) Elektrobit Automotive GmbH. All rights reserved.
#
# ------------------------------------------------------------------------------

WORKSPACE="$(dirname $(dirname $(realpath "$0")))"
echo "WORKSPACE: ${WORKSPACE}"

# The relative path which indicates the image type
: "${EBCL_TC_IMAGE:=standard/arm64}"
export EBCL_TC_IMAGE
echo "Test Image relative path EBCL_TC_IMAGE: ${EBCL_TC_IMAGE}"

# Artifactory paths
EBCL_IMAGE_BUNDLE_NAME="build.tar.xz"
EBCL_TC_IMAGE_BUNDLE_URL="${EBCL_IMAGE_BASE_ARTIFACTORY}/${EBCL_TC_IMAGE}/${EBCL_IMAGE_BUNDLE_NAME}"
# Must set to have the correct image bundle URL
echo "Downloading image bundle from: ${EBCL_TC_IMAGE_BUNDLE_URL}"
export EBCL_TC_IMAGE_BUNDLE_URL
# QEMU COMMAND FOR ARM64
if [[ "${EBCL_TC_IMAGE_BUNDLE_URL}" == *"arm64"* ]]; then
    echo "Image type is the supported arm64."
else
    echo "Image type is not arm64, not supported yet."
    exit 1
fi

export EBCL_TC_QEMU_NETWORK_APPEND="ipv6-net=fd00::eb/64,ipv6-host=fd00::eb:1,ipv6-dns=fd00::eb:3"
export EBCL_TC_QEMU_KERNEL_CMDLINE="console=ttyAMA0"
export EBCL_TC_QEMU_KERNEL_CMDLINE_APPEND="rw"


EBCL_ROOT_IMAGE_FILE_NAME="image.raw"
EBCL_KERNEL_FILE_NAME="vmlinuz"
EBCL_INITRD_FILE_NAME="initrd.img"
EBCL_STORAGE_DIRECTORY="${EBCL_TF_IMAGE_BASE}/${EBCL_TC_IMAGE}"

export EBCL_ROOT_IMAGE="${EBCL_STORAGE_DIRECTORY}/${EBCL_ROOT_IMAGE_FILE_NAME}"
export EBCL_KERNEL="${EBCL_STORAGE_DIRECTORY}/${EBCL_KERNEL_FILE_NAME}"
export EBCL_INITRD="${EBCL_STORAGE_DIRECTORY}/${EBCL_INITRD_FILE_NAME}"

# Introduce as a template
EBCL_QEMU_CMDLINE_AARCH64='qemu-system-aarch64
    -machine virt -cpu cortex-a72 -machine type=virt -nographic -m 4G
    -netdev user,id=mynet0,${EBCL_TC_QEMU_NETWORK_APPEND}
    -device virtio-net-pci,netdev=mynet0
    -kernel "${EBCL_KERNEL}"
    -append "${EBCL_TC_QEMU_KERNEL_CMDLINE} ${EBCL_TC_QEMU_KERNEL_CMDLINE_APPEND} test_overlay=/dev/vdb"
    -initrd "${EBCL_INITRD}"
    -drive format=raw,file=${EBCL_ROOT_IMAGE},if=virtio'

EBCL_QEMU_CMDLINE="${EBCL_QEMU_CMDLINE_AARCH64}"
export EBCL_QEMU_CMDLINE
echo "QEMU command line for current test image: ${EBCL_QEMU_CMDLINE}"
# COMMAND FOR SHUTDOWN IN IMAGE
EBCL_TC_SHUTDOWN_COMMAND="crinit-ctl poweroff"
EBCL_TC_SHUTDOWN_TARGET="Power down"

