name: Robot Test images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  prepare-sdk:
    name: Prepare SDK for Robot Testing
    runs-on: ubuntu-latest
    outputs:
      # Names of every Test Case defined
      test_cases: ${{ steps.get_tests.outputs.test_cases }}
      container_tag: ${{ steps.ver.outputs.container_tag}}
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Login to Docker registry
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        id: reg_login
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Import SDK image and initialize workspace
      - name: Extract DevContainer Version
        id: ver
        run: |
          CONTAINER_TAG=$(cat .devcontainer/devcontainer.json | grep "ghcr.io" | awk -F ":" '{print $3}' | awk -F "\"" '{print $1}')
          echo "container_tag=$CONTAINER_TAG" >> $GITHUB_OUTPUT
      

      - name: Check Modified DevContainer Available
        id: check_con
        run: docker manifest inspect ghcr.io/elektrobit/robot_test_dev_con:${{ steps.ver.outputs.container_tag }}
        continue-on-error: true
      
      - name: Pull Latest DevContainer
        if: ${{ steps.check_con.outcome == 'failure' }}
        id: pull_dev
        run: docker pull ghcr.io/elektrobit/ebcl_dev_container:${{ steps.ver.outputs.container_tag }}

      # Predownload Kiwi Box
      # Required, because of sporadic network issues when running all Test Cases simultaniously
      # which all try to download the same kiwi box.
      # To Do this, the easiest way, run minimal valid boxbuild command, which will download the kiwi box but fail immediatly after that
      # due to missing kiwi configuration"
      # Sometimes kiwi is run as ebcl user -> cp kiwi box to ebcl home
      - name: Predownload x86_64 Kiwi Box
        if: ${{ steps.check_con.outcome == 'failure' }}
        id: x86_64_box
        run: |
            docker run --user ebcl --name container-w-amd-box \
            -v $PWD:/workspace \
            ghcr.io/elektrobit/ebcl_dev_container:${{ steps.ver.outputs.container_tag }} bash -c \
              "bash /workspace/.github/workflows/tools/box_download.sh x86_64" 
            docker commit container-w-amd-box ghcr.io/elektrobit/robot_test_dev_con:${{ steps.ver.outputs.container_tag }}
      
      - name: Predownload aarch64 Kiwi Box
        if: ${{ steps.check_con.outcome == 'failure' }}
        id: aarch64_box
        run: |
            docker run --user ebcl --name container-w-arm-box \
            -v $PWD:/workspace \
            ghcr.io/elektrobit/robot_test_dev_con:${{ steps.ver.outputs.container_tag }} bash -c \
              "bash /workspace/.github/workflows/tools/box_download.sh aarch64 && \
                sudo mkdir -p /root/.kiwi_boxes && \
                sudo ln -s /home/ebcl/.kiwi_boxes/ubuntu /root/.kiwi_boxes/" 
            docker commit container-w-arm-box ghcr.io/elektrobit/robot_test_dev_con:${{ steps.ver.outputs.container_tag }}
      
      - name: Push Modified DevContainer
        if: ${{ steps.check_con.outcome == 'failure' }}
        run: docker push ghcr.io/elektrobit/robot_test_dev_con:${{ steps.ver.outputs.container_tag }}
      
      # Generate Test Matrix
      - name: Generate Test Matrix
        id: get_tests
        run: |
          sudo apt-get update && sudo apt-get install -y python3 python3-venv python3-pip
          python3 -m pip install --upgrade pip
          pip install robotframework
          echo "test_cases=$(./robot_tests/tools/extract_cases_names.py ./robot_tests/images.robot)" >> $GITHUB_OUTPUT

  Test:
    runs-on: ubuntu-latest
    needs: prepare-sdk
    strategy:
      fail-fast: false
      matrix:
        test_case:
          ${{ fromJson(needs.prepare-sdk.outputs.test_cases) }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          sudo apt-get update && sudo apt-get install -y python3 python3-venv python-is-python3 binfmt-support qemu-user-static
      - uses: docker/login-action@v3 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Modified DevContainer
        id: pull_dev
        run: docker pull ghcr.io/elektrobit/robot_test_dev_con:${{ needs.prepare-sdk.outputs.container_tag }}

      - name: Retag Modified DevContainer 
        id: import
        run: |
            docker tag ghcr.io/elektrobit/robot_test_dev_con:${{ needs.prepare-sdk.outputs.container_tag }} \
            ghcr.io/elektrobit/ebcl_dev_container:${{ needs.prepare-sdk.outputs.container_tag }}
      
      # Replace '/' in Test Case Names with '_'
      # '/' not allowed in File Names
      - name: Sanitize Test Name
        id: sanitize
        run: |
          test_name="${{ matrix.test_case }}"
          sanitized_test_name=$(echo "$test_name" | tr '/' '_')  # Replace slashes with underscores
          echo "sanitized_test_name=$sanitized_test_name" >> $GITHUB_ENV
        
      - name: Discover Build Tools State Cache
        id: state_cache
        uses: actions/cache@v4
        env:
          cache-name: buildtool-cache
        with:
          path: ~/state 
          key: ${{ env.cache-name }}-${{ needs.prepare-sdk.outputs.container_tag }}-${{ env.sanitized_test_name }}
          restore-keys: |
            ${{ env.cache-name }}-${{ needs.prepare-sdk.outputs.container_tag }}-

      - name: Run Robot Test in dev container
        id: robot
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            robot --outputdir ./robot_tests --test "${{ matrix.test_case }}" ./robot_tests/images.robot
      
      - name: Upload test report
        # Upload artifacts always when Robot Test failed but never when prepare steps fail.
        if:  ${{ failure() && steps.import.conclusion == 'success' && steps.sanitize.conclusion == 'success'}}
        uses: actions/upload-artifact@v4
        with:
          name: "report-${{ env.sanitized_test_name }}"
          path: |
            ./robot_tests/report.html
            ./robot_tests/output.xml
            ./robot_tests/log.html
