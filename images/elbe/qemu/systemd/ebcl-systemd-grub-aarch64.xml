<ns0:RootFileSystem xmlns:ns0="https://www.linutronix.de/projects/Elbe" xmlns:xi="http://www.w3.org/2003/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" created="2009-05-20T08:50:56" revision="6" xsi:schemaLocation="https://www.linutronix.de/projects/Elbe dbsfed.xsd">
	<project>
		<name>ebcl_systemd_grub_aarch64</name>
		<version>1.0</version>
		<description>
			You can run the image in QEMU aarch64 using the following command:
			qemu-system-aarch64 \
				-machine virt \
				-cpu cortex-a72 \
				-m 4096 \
				-nographic \
				-netdev user,id=mynet0 \
				-device virtio-net-pci,netdev=mynet0 \
				-drive file=sdcard.img,if=virtio  \
				-bios /usr/share/qemu-efi-aarch64/QEMU_EFI.fd
		</description>
		<buildtype>aarch64</buildtype>
		<xi:include href="../../includes/ebcl_1.1.1_mirrors.xml" />
		<suite>jammy</suite>
	</project>
	<target>
		<hostname>ebcl_systemd_grub_aarch64</hostname>
		<domain>elektrobit.com</domain>
		<passwd>linux</passwd>
		<console>ttyAMA0,115200</console>
		<debootstrap>
			<variant>minbase</variant>
		</debootstrap>
		<images>
			<gpthd>
				<name>sdcard.img</name>
				<size>4GiB</size>
				<grub-install />
				<partition>
					<size>256MiB</size>
					<label>uefi</label>
					<bootable />
				</partition>
				<partition>
					<size>remain</size>
					<label>root</label>
				</partition>
			</gpthd>
		</images>
		<fstab>
			<bylabel>
				<label>uefi</label>
				<mountpoint>/boot/efi</mountpoint>
				<fs>
					<type>vfat</type>
				</fs>
			</bylabel>
			<bylabel>
				<label>root</label>
				<mountpoint>/</mountpoint>
				<fs>
					<type>ext4</type>
				</fs>
			</bylabel>
		</fstab>
		<install-recommends />
		<pkg-list>
			<!-- grub bootloader -->
			<pkg>grub-efi-arm64</pkg>
			<pkg>linux-image-generic</pkg>
			<!-- required to allow the kernel package to generate an initrd.img -->
			<pkg>initramfs-tools</pkg>
			<!-- systemd init manager -->
			<pkg>systemd</pkg>
			<pkg>systemd-coredump</pkg>
			<pkg>systemd-timesyncd</pkg>
			<!-- tools -->			
			<pkg>sudo</pkg>
			<pkg>cron</pkg>
			<pkg>file</pkg>
			<pkg>findutils</pkg>
			<pkg>kmod</pkg>
			<!-- ssh -->
			<pkg>openssh-server</pkg>
			<pkg>openssh-client</pkg>
			<!-- apt tools and dependencies -->			
			<pkg>apt-utils</pkg>
			<pkg>gnupg</pkg>
			<pkg>dialog</pkg>
			<!-- add editors -->
			<pkg>vim</pkg>
			<pkg>nano</pkg>
			<!-- network tools -->
			<pkg>iproute2</pkg>
			<pkg>iputils-ping</pkg>
			<!-- debug tools -->
			<pkg>gdbserver</pkg>
			<pkg>libc6-dbg</pkg>
			<pkg>socat</pkg>
			<pkg>iperf3</pkg>
			<pkg>tcpdump</pkg>
			<pkg>traceroute</pkg>
			<pkg>strace</pkg>
			<!-- required for the example app -->
			<pkg>libjsoncpp25</pkg>
		</pkg-list>
		<finetuning>
			<!-- add ebcl user -->
		 	<adduser passwd="linux" shell="/bin/bash" groups="sudo,kvm">ebcl</adduser>
			<!-- use systemd as init manager -->
			<command>ln -s /usr/lib/systemd/systemd /sbin/init</command>
			<!-- enable systemd services -->
			<command>systemctl enable systemd-networkd</command>
			<command>systemctl enable systemd-resolved</command>
			<command>systemctl enable systemd-timesyncd</command>
		</finetuning>
		<project-finetuning>
			<set_packer packer="none">sdcard.img</set_packer>
		</project-finetuning>
	</target>
	<archivedir>../../overlays/networkd</archivedir>
	<archivedir>../../overlays/ssh</archivedir>
	<archivedir>../../overlays/apt</archivedir>
	<archivedir>../../overlays/grub</archivedir>
</ns0:RootFileSystem>
