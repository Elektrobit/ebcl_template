version: '3'

vars:
  arch: aarch64
  result_folder: ./build
  disc_image: ./build/image.raw
  base_tarball: build/ebcl_pi4.tar
  root_tarball: build/ebcl_pi4.config.tar
  sysroot_tarball: build/ebcl_pi4_sysroot.tar


env:
  SHELL : /bin/bash

tasks:
  build_root_base:
    cmds:
      - echo "Build root.tar..."
      - mkdir -p {{.result_folder}}
      - set -o pipefail && root_generator --no-config {{.root_filesystem_spec}} {{.result_folder}} 2>&1 | tee {{.base_tarball}}.log
    preconditions: 
       - test -f {{.root_filesystem_spec}}
    sources: 
       - ./{{.root_filesystem_spec}}
    generates:
       - ./{{.base_tarball}}
  
  build_rootfs:
    deps: [build_root_base]
    cmds: 
      - echo "Configuring {{.base_tarball}} as {{.root_tarball}}..."
      - mkdir -p  {{.result_folder}}
      - set -o pipefail && root_configurator {{.root_filesystem_spec}} {{.base_tarball}} {{.root_tarball}} 2>&1 | tee {{.root_tarball}}.log
    preconditions: 
       - test -f {{.root_filesystem_spec}}
    sources: 
       - ./{{.root_filesystem_spec}}
    generates:
       - ./{{.root_tarball}}

  build_image:
    deps: [build_rootfs]
    cmds: 
      - echo "Build image..."
      - mkdir -p  {{.result_folder}}
      - set -o pipefail && embdgen -o ./{{.disc_image}} {{.partition_layout}} 2>&1 | tee {{.disc_image}}.log
    preconditions: 
       - test -f {{.partition_layout}}
    sources: 
       - ./{{.partition_layout}}
    generates: 
       - ./{{.disc_image}}


  sysroot_tarball:
    cmds: 
      - echo "Build sysroot.tar..."
      - mkdir -p {{.result_folder}}
      - set -o pipefail && root_generator --sysroot --no-config {{.root_filesystem_spec}} {{.result_folder}} 2>&1 | tee {{.sysroot_tarball}}.log
    preconditions: 
      - test -f {{.root_filesystem_spec}}
    sources: 
       - ./{{.root_filesystem_spec}}
    generates:
       - ./{{.sysroot_tarball}}

  install_sysroot:
    deps: [sysroot_tarball]
    cmds: 
      - rm -rf /workspace/sysroot_{{.arch}}/*
      - tar xf {{.sysroot_tarball}} -C /workspace/sysroot_{{.arch}}/ || true

  edit_base:
    cmds: 
      - echo "Extacting base root tarball..."
      - mkdir -p {{.result_folder}}/root
      - fakeroot -s {{.result_folder}}/fakedit -- tar xf {{.base_tarball}} -C {{.result_folder}}/root
      - echo "Open edit shell..."
      - cd {{.result_folder}}/root && fakeroot -i ../fakedit -s ../fakeedit
      - echo "Re-packing root tarball..."
      - defer: rm -f {{.base_tarball}}.old
      - mv {{.base_tarball}} {{.base_tarball}}.old
      - cd {{.result_folder}}/root && fakeroot -i ../fakedit -s ../fakedit -- tar cf ../../{{.base_tarball}} .
      - defer: rm -rf {{.result_folder}}/root
    
  edit_root:
    cmds: 
      - echo "Extacting base root tarball..."
      - mkdir -p {{.result_folder}}/root
      - fakeroot -s {{.result_folder}}/fakedit -- tar xf {{.root_tarball}} -C {{.result_folder}}/root
      - echo "Open edit shell..."
      - cd {{.result_folder}}/root && fakeroot -i ../fakedit -s ../fakeedit
      - echo "Re-packing root tarball..."
      - defer: rm -f {{.root_tarball}}.old
      - mv {{.root_tarball}} {{.root_tarball}}.old
      - cd {{.result_folder}}/root && fakeroot -i ../fakedit -s ../fakedit -- tar cf ../../{{.root_tarball}} .
      - defer: rm -rf {{.result_folder}}/root


  build_initrd:
    cmds:
      - echo "Fake target to be interface compliant"
      - echo "Image was written to"

  build_boot:
    cmds:
      - echo "Fake target to be interface compliant"
      - echo "Image was written to"
