# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  run_amd64:
    desc: Run the image with QEMU x86_64
    vars:
      kernel_cmdline: '{{.kernel_cmdline | default "console=ttyS0"}}'
      kernel_cmdline_append: '{{.kernel_cmdline_append | default ""}}'
      qemu_net_append: '{{.qemu_net_append | default ""}}'
      result_folder: '{{.result_folder | default "./build/"}}'
      kernel: '{{.kernel | default "vmlinuz"}}'
      initrd_img: '{{.initrd_img | default "initrd.img"}}'
      disc_image: '{{.disc_image | default "image.raw"}}'
    cmds:
      - |
        qemu-system-x86_64 -nographic -m 4G \
        -netdev user,id=mynet0{{.qemu_net_append}} \
        -device virtio-net-pci,netdev=mynet0 \
        -kernel {{.result_folder}}{{.kernel}} \
        -append "{{.kernel_cmdline}} {{.kernel_cmdline_append}}" \
        -initrd {{.result_folder}}{{.initrd_img}} \
        -drive format=raw,file={{.result_folder}}{{.disc_image}},if=virtio
    preconditions:
      - test -f {{.result_folder}}{{.disc_image}}
      - test -f {{.result_folder}}{{.initrd_img}}
      - test -f {{.result_folder}}{{.kernel}}
    method: none

  run_amd64_efi:
    desc: Run the image with QEMU x86_64 using EFI firmware
    vars:
      qemu_net_append: '{{.qemu_net_append | default ""}}'
      result_folder: '{{.result_folder | default "./build/"}}'
      efi_image: '{{.efi_image | default "image.raw"}}'
    cmds:
      - |
        qemu-system-x86_64 \
        -m 4096 \
        -nographic \
        --bios /usr/share/ovmf/OVMF.fd \
        -netdev user,id=mynet0{{.qemu_net_append}} \
        -device virtio-net-pci,netdev=mynet0 \
        -drive format=raw,file={{.result_folder}}{{.efi_image}},if=virtio
    preconditions:
      - test -f {{.result_folder}}{{.efi_image}}
    method: none

  run_arm64:
    desc: Run the image with QEMU aarch64
    vars:
      kernel_cmdline: '{{.kernel_cmdline | default "console=ttyAMA0"}}'
      kernel_cmdline_append: '{{.kernel_cmdline_append | default ""}}'
      qemu_net_append: '{{.qemu_net_append | default ""}}'
      result_folder: '{{.result_folder | default "./build/"}}'
      kernel: '{{.kernel | default "vmlinuz"}}'
      initrd_img: '{{.initrd_img | default "initrd.img"}}'
      disc_image: '{{.disc_image | default "image.raw"}}'
    cmds:
      - |
        qemu-system-aarch64 \
        -machine virt -cpu cortex-a72 -machine type=virt -nographic -m 4G \
        -netdev user,id=mynet0{{.qemu_net_append}} \
        -device virtio-net-pci,netdev=mynet0 \
        -kernel {{.result_folder}}{{.kernel}} \
        -append "{{.kernel_cmdline}} {{.kernel_cmdline_append}}" \
        -initrd {{.result_folder}}{{.initrd_img}} \
        -drive format=raw,file={{.result_folder}}{{.disc_image}},if=virtio
    preconditions:
      - test -f {{.result_folder}}{{.disc_image}}
      - test -f {{.result_folder}}{{.initrd_img}}
      - test -f {{.result_folder}}{{.kernel}}
    method: none

  run_arm64_efi:
    desc: Run the image with QEMU aarch64 using EFI firmware
    vars:
      qemu_net_append: '{{.qemu_net_append | default ""}}'
      result_folder: '{{.result_folder | default "./build/"}}'
      efi_image: '{{.efi_image | default "image.raw"}}'
    cmds:
      - |
        qemu-system-aarch64 \
        -machine virt \
        -cpu cortex-a72 \
        -m 4096 \
        -nographic \
        -netdev user,id=mynet0{{.qemu_net_append}} \
        -device virtio-net-pci,netdev=mynet0 \
        -drive format=raw,file={{.result_folder}}{{.disc_image}},if=virtio
        -bios /usr/share/qemu-efi-aarch64/QEMU_EFI.fd
    preconditions:
      - test -f {{.result_folder}}{{.efi_image}}
    method: none
