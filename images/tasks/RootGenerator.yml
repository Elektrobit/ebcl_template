# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  build:
    desc: |
            Use the root generator to build the base root filesystem tarball.
            This fist step only installs the specified packages. User configuration
            is done as a second step, because the build of this tarball is quite 
            time consuming and configuration is fast. This is an optimization for 
            the image development process.
    vars:
      result_folder: '{{.result_folder | default "./build/"}}'
      base_spec: '{{.base_spec | default "base.yaml"}}'
      root_spec: '{{.root_spec | default "root.yaml"}}'
      base_tarball: '{{.base_tarball | default "root.tar"}}'
    cmds:
      - mkdir -p {{.result_folder}}
      - set -o pipefail && root_generator --no-config {{.root_spec}} {{.result_folder}} 2>&1 | tee {{.result_folder}}{{.base_tarball}}.log
    preconditions: 
      - test -f {{.root_spec}}
    sources: 
      - '{{.base_spec}}'
      - '{{.root_spec}}'
    generates: 
      - '{{.result_folder}}{{.base_tarball}}'
  
  config:
    desc: |
           The root configurator is used to run the user configuration scripts
           as a separate step in the build process.
    vars:
      result_folder: '{{.result_folder | default "./build/"}}'
      base_spec: '{{.base_spec | default "base.yaml"}}'
      root_spec: '{{.root_spec | default "root.yaml"}}'
      base_tarball: '{{.base_tarball | default "root.tar"}}'
      root_tarball: '{{.root_tarball | default "root.config.tar"}}'
    cmds: 
      - mkdir -p  {{.result_folder}}
      - set -o pipefail && root_configurator {{.root_spec}} {{.base_tarball}} {{.root_tarball}} 2>&1 | tee {{.result_folder}}{{.root_tarball}}.log
    preconditions: 
      - test -f {{.root_spec}}
      - test -f {{.result_folder}}{{.base_tarball}}
    sources: 
      - '{{.base_spec}}'
      - '{{.root_spec}}'
    generates: 
      - '{{.result_folder}}{{.root_tarball}}'
