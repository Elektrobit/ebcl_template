#!/bin/bash

IMAGE_SIZE_MB=5000
IMAGE_NAME=disk.img

if [ ! -d binaries ];then
	osc -A https://ebs.ebgroup.elektrobit.com getbinaries images aarch64
    	cd binaries
	tar -xvJf *.tar.xz
	cd ..

	# Step 1: Create the disk image file
	dd if=/dev/zero of=$IMAGE_NAME bs=1M count=$IMAGE_SIZE_MB
	mv $IMAGE_NAME binaries/

	# Step 2: Loopback mount the disk image as a device
	LOOP_DEVICE=$(sudo losetup -f)
	sudo losetup $LOOP_DEVICE binaries/$IMAGE_NAME

	# Step 3: Partition the loopback device
	sudo parted $LOOP_DEVICE mklabel msdos

	# Step 4: Create the first partition (ext4)
	sudo parted $LOOP_DEVICE mkpart primary ext4 1MiB 20%

	# Step 5: Create the second partition (ext4)
	sudo parted $LOOP_DEVICE mkpart primary ext4 20% 100%

	# Step 6: Format the partitions
	sudo mkfs.ext4 ${LOOP_DEVICE}p1
	sudo mkfs.ext4 ${LOOP_DEVICE}p2

	# Step 7: Copy RootFS image to partition 1
	sudo mkdir /mnt/diskimage
	sudo mkdir /mnt/rootimage
	sudo mount ${LOOP_DEVICE}p1 /mnt/diskimage
	sudo mount $(echo binaries/vm*2) /mnt/rootimage
	sudo cp -r /mnt/rootimage/* /mnt/diskimage

	# Step 8: Unmount Diskimage and RootFS image
	sudo umount /mnt/diskimage
	sudo umount /mnt/rootimage
	sudo rmdir /mnt/diskimage
	sudo rmdir /mnt/rootimage

	# Step 9: Detach the loopback device
	sudo losetup -d $LOOP_DEVICE

fi

qemu-system-aarch64 \
	-machine virt \
	-cpu cortex-a72 \
	-m 2G \
	-bios /usr/share/qemu-efi-aarch64/QEMU_EFI.fd \
	-kernel binaries/*.kernel \
	-append "root=/dev/vda1 console=ttyAMA0 systemd.machine_id=009854309841123" \
	-drive file=binaries/$IMAGE_NAME,if=virtio,format=raw \
	-netdev user,id=user0,hostfwd=tcp::2222-:2223 \
	-device virtio-net-pci,netdev=user0 \
	-nographic