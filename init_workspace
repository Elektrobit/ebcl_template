#!/bin/bash

# This script is exectued in the host environment,
# before the VS Code dev-container build.

CONTAINER_TOOL="docker"
CONTAINER_TAG="testing"
LOCAL_CONTAINER_TAG="local"

echo "Setting EBcL workspace up..."

mkdir -p tools

source .env

# Copy user config
if [ -d "${HOME}/.ebcl_config" ]; then
    echo "Copying user config..."
    mkdir -p tools/user_config
    cp -R ~/.ebcl_config/* tools/user_config
    cp -R ~/.ebcl_config/.* tools/user_config
else
    echo "No user config found. You can provide your own init scripts in ~/.ebcl_config"
fi

# source user env, if it exists
ENV="tools/user_config/.env"
if [ -f "$ENV" ]; then
    echo "Sourcing '${ENV}'..."    
    source $ENV
fi

if [ $BUILD_CONTAINER -eq 1 ]; then
    if [ ! -d tools/container ]; then
        echo "Downloading container sources..."
        echo "Using container from branch ${CONTAINER_BRANCH}."

        if [ -z "${CONTAINER_BRANCH}" ]; then
            CONTAINER_BRANCH="main"
            echo "Using default branch ${CONTAINER_BRANCH}."
        fi

        if [ -z "${GET_CONTAINER}" ]; then
            GET_CONTAINER="git clone --branch ${CONTAINER_BRANCH} https://github.com/Elektrobit/ebcl_dev_container.git ./tools/container"
        fi

        $GET_CONTAINER 
    fi

    python3 -m venv tools/.venv
    source tools/.venv/bin/activate
    pip install -r tools/container/requirements.txt

    echo "Building container..."
    cd tools/container
    ./build_container

elif [ ${PULL_CONTAINER} -eq 1 ]; then
    echo "Pulling container..."
    ${CONTAINER_TOOL} pull "linux.elektrobit.com/ebcl/sdk:${CONTAINER_TAG}"
else
    echo "Expecting container to exist..."
fi

echo "Tagging linux.elektrobit.com/ebcl/sdk:${CONTAINER_TAG} as linux.elektrobit.com/ebcl/sdk:${LOCAL_CONTAINER_TAG}..."

${CONTAINER_TOOL} tag "linux.elektrobit.com/ebcl/sdk:${CONTAINER_TAG}" "linux.elektrobit.com/ebcl/sdk:${LOCAL_CONTAINER_TAG}"

# check if container exists
${CONTAINER_TOOL} image ls | grep "linux.elektrobit.com/ebcl/sdk " | grep "${LOCAL_CONTAINER_TAG}"
if [ $? -ne 0 ]; then
    echo "Container not found."
    exit 1
fi
